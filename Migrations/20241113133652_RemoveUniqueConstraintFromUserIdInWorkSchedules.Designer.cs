// <auto-generated />
using System;
using Ipstatuschecker.Mvc.Infrastructure.DLA.DbContextSql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ipstatuschecker.Migrations
{
    [DbContext(typeof(DbIpCheck))]
    [Migration("20241113133652_RemoveUniqueConstraintFromUserIdInWorkSchedules")]
    partial class RemoveUniqueConstraintFromUserIdInWorkSchedules
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Ipstatuschecker.DomainEntity.Device", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("DeviceNames")
                        .HasColumnType("longtext");

                    b.Property<int?>("IpStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IpStatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Ipstatuschecker.DomainEntity.IpStatus", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("IpAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("IpStatuses");
                });

            modelBuilder.Entity("Ipstatuschecker.DomainEntity.PingLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("OflineTime")
                        .HasColumnType("longtext");

                    b.Property<string>("OnlineTime")
                        .HasColumnType("longtext");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("PingLog");
                });

            modelBuilder.Entity("Ipstatuschecker.DomainEntity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Ipstatuschecker.DomainEntity.WorkSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EndTime")
                        .HasColumnType("longtext");

                    b.Property<bool>("Notification")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("StartTime")
                        .HasColumnType("longtext");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("workSchedules");
                });

            modelBuilder.Entity("Ipstatuschecker.DomainEntity.Device", b =>
                {
                    b.HasOne("Ipstatuschecker.DomainEntity.IpStatus", "IpStatus")
                        .WithMany()
                        .HasForeignKey("IpStatusId");

                    b.HasOne("Ipstatuschecker.DomainEntity.User", null)
                        .WithMany("Devices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("IpStatus");
                });

            modelBuilder.Entity("Ipstatuschecker.DomainEntity.IpStatus", b =>
                {
                    b.HasOne("Ipstatuschecker.DomainEntity.User", null)
                        .WithMany("IpStatuses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ipstatuschecker.DomainEntity.PingLog", b =>
                {
                    b.HasOne("Ipstatuschecker.DomainEntity.User", "User")
                        .WithOne("PingLog")
                        .HasForeignKey("Ipstatuschecker.DomainEntity.PingLog", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ipstatuschecker.DomainEntity.WorkSchedule", b =>
                {
                    b.HasOne("Ipstatuschecker.DomainEntity.User", "User")
                        .WithOne("workSchedule")
                        .HasForeignKey("Ipstatuschecker.DomainEntity.WorkSchedule", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ipstatuschecker.DomainEntity.User", b =>
                {
                    b.Navigation("Devices");

                    b.Navigation("IpStatuses");

                    b.Navigation("PingLog");

                    b.Navigation("workSchedule");
                });
#pragma warning restore 612, 618
        }
    }
}
