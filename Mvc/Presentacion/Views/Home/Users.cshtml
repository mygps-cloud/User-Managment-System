@using Ipstatuschecker.Dto
@using Ipstatuschecker.Dto.Response
@model List<GetAllViweModelDto>

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Status</title>
    <link rel="stylesheet" href="styles.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin-top: 20px;
        }

        .container {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin: auto;
            max-width: 100%;
        }

        table {
            width: 80%;
            border-collapse: collapse;
            margin: 20px 0;
        }

        th,
        td {
            padding: 10px;
            border: 2px solid #ddd;
            text-align: center;
        }

        th {
            background-color: #f5f5f5;
        }

        .breaktime {
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: space-around;
            width: 200px;
           
        }

        .ol-tag {
            display: flex;
            flex-direction: column;
            align-items: center;


        }

        .status-online {
            color: green;
        }

        .start-wrapper {
            display: flex;
            flex-direction: column;
            position:relative;
            height: 100px;

        }

        .box-list {
            padding-top: 5px;
            display: flex;
            align-content: center;
            justify-content: center;
            @* background-color: red; *@
            overflow-y: scroll;
            @* position: absolute; *@
            bottom:20px;
        }

        .status-offline {
            color: red;
        }

        #start-time,
        #end-time {
            opacity: 0;
            transition: opacity 0.3s;
            font-size: 0.8em;
            color: black;
            background-color: transparent;
            border: none;
            padding: 0;
        }
    </style>
</head>

<body>

    <div class="container">
       
        <table>
            <thead>
                <tr>
                    <th>Name</th>
                    <th>  Time In</th>
                    <th> Time Out </th>
                    <th>Break time</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var log in Model)
                {
                    <tr>
                        <td>@log.Name</td>
                        <td>
                            <ul>
                             @if (log.PingLogDtoResponse?.OnlieTime != null && log.PingLogDtoResponse.OnlieTime.Any())
                            {    @foreach (var onlineTime in log.PingLogDtoResponse?.OnlieTime)
                                {
                                    <li>@onlineTime.ToString("g")</li>
                                }
                             }
                            </ul>
                        </td>
                        <td>
                            <ul>
                             @if (log.PingLogDtoResponse?.OflineTime != null && log.PingLogDtoResponse.OflineTime.Any())
                             {   @foreach (var offline in log.PingLogDtoResponse.OflineTime)
                                {
                                    <li>@offline.ToString("g")</li>
                                }
                             }
                            </ul>
                        </td>
                        <td class="breaktime">

                             <div class="start-wrapper">
                                <p style="cursor:pointer" id="start-btn-@log.Id">Start Time</p>
                                <div class="box-list">
                                    <select class='ol-tag' id='start-time-@log.Id'>

                    @if (log.WorkSchedules?.StartTime != null && log.WorkSchedules.StartTime.Any())
                                {
                                    foreach (var StartTime in log.WorkSchedules.StartTime)
                                    {
                                        <option>@StartTime.ToString("HH:mm:ss")</option>
                                    }
                                }
                                        
                                    </select>
                                </div>
                            </div>

                            <div class="start-wrapper">
                                <p style="cursor:pointer" id="end-btn-@log.Id">End Time</p>
                                <div class="box-list">
                                    <select class='ol-tag' id="end-time-@log.Id">
                                
                       @if (log.WorkSchedules?.EndTime != null && log.WorkSchedules.EndTime.Any())
                            {
                                foreach (var endTime in log.WorkSchedules.EndTime)
                                {
                                    <option>@endTime.ToString("HH:mm:ss")</option>
                                }
                            }

                                    </select>
                                </div>
                            </div>


                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <script>
        const openHandler = (type) => {
            const element = document.getElementById(type);
            if (element) {

                element.style.opacity = element.style.opacity === "1" ? "0" : "1";
            }
        };
    </script>
</body>

</html>
